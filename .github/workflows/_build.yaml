name: Build
on:
  workflow_call:
    inputs:
      dry-run:
        description: to prevent upload artifacts, set '1'
        required: false
        type: boolean
        default: false
      build-version:
        description: build date
        required: false
        type: string
        default: noversion
      packaging:
        description: package target
        required: false
        type: string
        default: native-image
      java-version:
        description: builder container name
        required: false
        type: string
        default: 17
      graalvm-version:
        description: builder container name
        required: false
        type: string
        default: 22.3.0
      stable:
        description: stable version
        required: false
        type: string
        default: java17-22-native-image
    outputs:
      artifact-name:
        description: Name of artifact to upload
        value: awesome-blog-backend
      build-version:
        description: build date
        value: ${{ inputs.build-version }}

jobs:
  version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - id: version
        name: Version
        run: |
          echo "version=${{ inputs.java-version }}-${{ inputs.graalvm-version }}-${{ inputs.packaging }}" >> "$GITHUB_OUTPUT"

  build:
    runs-on: ubuntu-latest
    needs:
      - version
    container:
      image: marksailes/al2-graalvm:${{ inputs.java-version }}-${{ inputs.graalvm-version }}
    continue-on-error: ${{ needs.version.outputs.version != inputs.stable }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: actions/cache@v3
        with:
          path: /root/.m2/repository/
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Maven Package
        run: |
          chmod +x ./mvnw
          ./mvnw package \
            -Dmaven.test.skip=true \
            -Dpackaging=${{ inputs.packaging }} \
            -Dmicronaut.runtime=lambda \
            -Djdk.version=${{ inputs.java-version }} \
            -Drelease.version=${{ inputs.java-version }} \
            -Pgraalvm
        env:
          AWS_REGION: ap-northeast-1

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.packaging }}-${{ inputs.java-version }}-${{ inputs.graalvm-version }}
          path: ./target/awesome-blog-server*
          retention-days: 1

  upload:
    if: inputs.dry-run != true && needs.version.outputs.version == inputs.stable
    needs:
      - version
      - build
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          name: ${{ inputs.packaging }}-${{ inputs.java-version }}-${{ inputs.graalvm-version }}
          path: ./awesome-blog-backend

      - name: Rename Artifact
        run: mv ./awesome-blog-backend/awesome-blog-server bootstrap

      - name: Zip lambda
        run: zip -rj function.zip bootstrap

      - uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_DEPLOYMENT_ROLE_ARN }}
          aws-region: ap-northeast-1

      - id: Upload
        name: Upload
        run: |
          echo ${{ inputs.build-version}}
          aws s3 cp \
          function.zip \
          s3://awesome-blog-an1-dev-mdl/artifact/blog/backend/${{ inputs.build-version}}/
